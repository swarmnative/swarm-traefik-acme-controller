name: publish

on:
  push:
    branches: [ main, master ]
    paths:
      - 'Dockerfile'
      - 'entrypoint.sh'
      - '.github/workflows/publish.yml'
      - 'README.md'
  workflow_dispatch: {}
  schedule:
    - cron: '17 3 * * *'

jobs:
  build-and-push:
    permissions:
      contents: read
      packages: write
      id-token: write
    runs-on: ubuntu-latest
    env:
      IMAGE_GHCR: ghcr.io/${{ github.repository }}
      IMAGE_DH: docker.io/swarmnative/swarm-traefik-acme-controller
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Get latest lego tag
        id: lego
        run: echo "tag=$(curl -fsSL https://api.github.com/repos/go-acme/lego/releases/latest | jq -r .tag_name)" >> $GITHUB_OUTPUT

      - name: Get CA bundle fingerprint
        id: cahash
        run: |
          h=$(docker run --rm alpine sh -lc 'apk add --no-cache ca-certificates >/dev/null 2>&1; sha256sum /etc/ssl/certs/ca-certificates.crt | awk "{print $1}"')
          echo "hash=$h" >> $GITHUB_OUTPUT

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Check if GHCR image exists for lego+ca tag
        id: check_ghcr
        continue-on-error: true
        run: docker buildx imagetools inspect $IMAGE_GHCR:lego-${{ steps.lego.outputs.tag }}-ca-${{ steps.cahash.outputs.hash }} > /dev/null

      - name: Login to Docker Hub
        if: steps.check_ghcr.outcome != 'success'
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push (GHCR + Docker Hub)
        if: steps.check_ghcr.outcome != 'success'
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          build-args: |
            LEGO_VERSION=${{ steps.lego.outputs.tag }}
          tags: |
            ${{ env.IMAGE_GHCR }}:latest
            ${{ env.IMAGE_GHCR }}:lego-${{ steps.lego.outputs.tag }}-ca-${{ steps.cahash.outputs.hash }}
            ${{ env.IMAGE_GHCR }}:{{date 'YYYYMMDD'}}
            ${{ env.IMAGE_DH }}:latest
            ${{ env.IMAGE_DH }}:lego-${{ steps.lego.outputs.tag }}-ca-${{ steps.cahash.outputs.hash }}
            ${{ env.IMAGE_DH }}:{{date 'YYYYMMDD'}}
          sbom: true
          provenance: true

      - name: Skip build (image already exists)
        if: steps.check_ghcr.outcome == 'success'
        run: echo "Image for lego+ca tag lego-${{ steps.lego.outputs.tag }}-ca-${{ steps.cahash.outputs.hash }} already exists. Skipping build."

